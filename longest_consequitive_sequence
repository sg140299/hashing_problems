#include<bits/stdc++.h>
using namespace std;
map<int,int> m;
int solve(vector<int> &v,int n){
    for(int i=0;i<n;i++){
        
    int len1=0;
    int len2=0;
    int x=v[i];
    if(m.find(x)!=m.end()){
        m[x-m[x]+1]+=1;
        m[x]+=1;
    }
    else{
        if(m.find(x-1)!=m.end()){
            len1=m[x-1];
        }
        if(m.find(x+1)!=m.end()){
            len2=m[x+1];
        }
        int left=x-len1;
        int right=x+len2;
        if(len1!=0){m[left]+=1;}
        if(len2!=0){m[right]+=1;}
        m[x]=1+len1+len2;
    }
    }
    vector<int> b;
    for(auto x:m){
        b.push_back(x.second);
    }
    return *(max_element(b.begin(),b.end()));
}
int main(){
    int n;
    cin>>n;
    vector<int> v(n);
    for(int i=0;i<n;i++){
       cin>>v[i];
    }
    cout<<solve(v,n);
    return 0;
}
